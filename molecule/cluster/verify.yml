---
# This is an example playbook to execute goss tests.
# Tests need distributed to the appropriate ansible host/groups
# prior to execution by `goss validate`.
#
# The goss ansible module is installed with molecule.  The ANSIBLE_LIBRARY
# path is updated appropriately on `molecule verify`.

# Details about ansible module:
#  - https://github.com/indusbox/goss-ansible

- name: Verify
  hosts: all
  vars:
    goss_version: v0.3.7
    goss_arch: amd64
    goss_sha256sum: 357f5c7f2e7949b412bce44349cd32ab19eb3947255a8ac805f884cc2c326059
    goss_dst: /usr/local/bin/goss
    goss_url: "https://github.com/aelsabbahy/goss/releases/download/{{ goss_version }}/goss-linux-{{ goss_arch }}"
    goss_test_directory: /tmp
    goss_format: documentation

  vars_files:
    - ../../defaults/main.yml
    - ../../vars/main.yml
    - ./group_vars/redis.yml
    - ./group_vars/vault.yml

  tasks:
    - name: Download and install Goss
      get_url:
        url: "{{ goss_url }}"
        dest: "{{ goss_dst }}"
        mode: 0755

    - name: Copy Goss tests to remote
      template:
        src: "{{ item }}"
        dest: "{{ goss_test_directory }}/{{ item | basename }}"
      with_fileglob:
        - "{{ playbook_dir }}/tests/test_*.yml"

    - name: Register test files
      shell: "ls {{ goss_test_directory }}/test_*.yml"
      register: test_files

    - name: Execute Goss tests
      command: "goss -g {{ item }} validate --format {{ goss_format }}"
      register: test_results_without_password
      with_items: "{{ test_files.stdout_lines }}"
      ignore_errors: true
      when:
        - not redis_auth

    - name: Execute Goss tests with password
      command: "goss -g {{ item }} validate --format {{ goss_format }}"
      register: test_results_with_password
      with_items: "{{ test_files.stdout_lines }}"
      ignore_errors: true
      environment:
        REDISCLI_AUTH: "{{ redis_password }}"
      when:
        - redis_auth

    - name: Assigns results to test_results
      set_fact:
        test_results: "{{ test_results_without_password if not redis_auth else test_results_with_password }}"

    - name: Display details about the goss results
      debug:
        msg: "{{ item.stdout_lines }}"
      with_items: "{{ test_results.results }}"

    - name: Fail when tests fail
      fail:
        msg: "Goss failed to validate"
      when: item.rc != 0
      with_items: "{{ test_results.results }}"
